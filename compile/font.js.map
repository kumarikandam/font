{
"version":3,
"file":"compile/font.js",
"lineCount":4,
"mappings":"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",
"sources":[" [synthetic:es6/util/arrayiterator] "," [synthetic:es6/util/makeiterator] ","src/font.js","src/index.js"],
"sourcesContent":["/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Utility method for creating an iterator for Arrays.\n */\n'require base';\n\n/**\n * Returns an internal iterator from the given array.\n * @param {!Array<T>} array\n * @return {function():!IIterableResult<T>}\n * @template T\n */\n$jscomp.arrayIteratorImpl = function(array) {\n  var index = 0;\n  return function() {\n    if (index < array.length) {\n      return {\n        done: false,\n        value: array[index++],\n      };\n    } else {\n      return {done: true};\n    }\n  };\n};\n\n/**\n * Returns an internal iterator from the given array.\n * @param {!Array<T>} array\n * @return {!Iterator<T>}\n * @template T\n */\n$jscomp.arrayIterator = function(array) {\n  return /** @type {!Iterator<T>} */ ({next: $jscomp.arrayIteratorImpl(array)});\n};\n\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Polyfill for for-of loops.\n */\n'require es6/util/arrayiterator';\n\n/**\n * Creates an iterator for the given iterable.  This iterator should never\n * be exposed to user code.\n *\n * @param {string|!Iterable<T>|!Iterator<T>|!Arguments} iterable\n * @return {!Iterator<T>}\n * @template T\n * @suppress {reportUnknownTypes}\n */\n$jscomp.makeIterator = function(iterable) {\n  // NOTE: Disabling typechecking because [] not allowed on @struct.\n  var iteratorFunction = typeof Symbol != 'undefined' && Symbol.iterator &&\n      (/** @type {?} */ (iterable)[Symbol.iterator]);\n  return iteratorFunction ? iteratorFunction.call(iterable) :\n      $jscomp.arrayIterator(/** @type {!Array} */ (iterable));\n};\n","import font from './'\n\nwindow['@lemuria/font'] = font","/* eslint-env browser */\nconst GOOGLE_URL = 'https://fonts.googleapis.com/css?display=swap&family='\n\n/**\n * Loads A Web Font Stylesheet (e.g., Google Fonts) Without Render Blocking And Multiple Layout Updates.\n * @param {string} url The font URL.\n */\nexport default function font(url) {\n  /**\n   * @param {string} address The address to load.\n   * @param {function(string)} cb The callback to call on complete.\n   * @param {string} [marker] Performance annotation.\n   */\n  const prefetch = (address, cb, marker = '') => {\n    performance.mark('xhr-start'+marker)\n    const xhr = new XMLHttpRequest()\n    xhr.onreadystatechange = () => {\n      if(xhr.readyState == 4) {\n        if (xhr.status == 200) {\n          cb(xhr.responseText)\n          performance.mark('xhr-end'+marker)\n          performance.measure('xhr'+marker, 'xhr-start'+marker, 'xhr-end'+marker)\n        } else {\n          console.error('Error loading webfont: server responded with code %s at %s', xhr.status, address)\n        }\n      }\n    }\n    xhr.open('GET', address)\n    try {\n      xhr.send(null)\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  const FONT = url\n\n  performance.mark('agf-start')\n\n  preloadDone({ href: FONT }, 'js')\n\n  function preloadDone(linkEl, marker = 'link') {\n    const href = linkEl.href\n    let CSS\n\n    prefetch(href, (result) => {\n      CSS = result\n      const re = /url\\((.+?)\\).*?;\\s+unicode-range: (.+?);/g\n      let ranges = {}\n      const fonts = []\n      let a\n      while((a = re.exec(result))) {\n        const [, u, range] = a\n        fonts.push({ url: u, range })\n        ranges[range] = 1\n      }\n      ranges = Object.keys(ranges).reduce((acc, range) => {\n        const reg = range\n          .split(/,\\s/)\n          .map((r) => r.replace('U+', '\\\\u').replace('-', '-\\\\u'))\n          .join('').toLowerCase()\n        acc[range] = new RegExp(`[${reg}]`)\n        return acc\n      }, {})\n\n      const body = document.body ? document.body.innerText : ''\n      const validRanges = Object.keys(ranges).reduce((acc, range) => {\n        const reg = ranges[range]\n        const valid = reg.test(body)\n        if (valid) acc[range] = true\n        return acc\n      }, {})\n\n      urls = fonts.filter(({ range }) => {\n        return range in validRanges\n      }).map(({ url: u }) => u)\n      if (!urls.length) return loadedCb()\n\n      urls.forEach((address, i) => {\n        const link = document.createElement('link')\n        link.href = address\n        link.rel = 'preload'\n        link.as = 'font'\n        performance.mark('link-preload-start'+i)\n        link.onload = () => loadedCb(i)\n        link.setAttribute('crossorigin', true)\n        document.head.appendChild(link)\n      })\n    }, '-' + marker)\n\n    let urls = []\n    let loaded = 0\n    /**\n     * @param {number} [i] The index of the link\n     */\n    const loadedCb = (i) => {\n      if (i) {\n        performance.mark('link-preload-end'+i)\n        performance.measure('link-preload', 'link-preload-start'+i, 'link-preload-end'+i)\n      }\n      loaded++\n      if (loaded >= urls.length) {\n        const style = document.createElement('style')\n        style.innerHTML = CSS\n        document.head.appendChild(style)\n\n        performance.mark('agf-end')\n        performance.measure('@lemuria/font', 'agf-start', 'agf-end')\n      }\n    }\n  }\n}"],
"names":["$jscomp.arrayIteratorImpl","window","font","url","prefetch","address","cb","marker","performance","mark","xhr","XMLHttpRequest","onreadystatechange","xhr.onreadystatechange","readyState","status","responseText","measure","console","error","open","send","err","preloadDone","linkEl","loadedCb","i","loaded","urls","length","style","document","createElement","innerHTML","CSS","head","appendChild","href","result","re","ranges","fonts","a","exec","$jscomp.makeIterator","u","range","push","Object","keys","reduce","acc","reg","split","map","r","replace","join","toLowerCase","RegExp","body","innerText","validRanges","test","valid","filter","forEach","link","rel","as","onload","link.onload","setAttribute"]
}
